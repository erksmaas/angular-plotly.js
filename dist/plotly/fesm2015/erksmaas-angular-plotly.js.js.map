{"version":3,"file":"erksmaas-angular-plotly.js.js","sources":["../../../projects/plotly/src/lib/plotly.service.ts","../../../projects/plotly/src/lib/plotly.component.ts","../../../projects/plotly/src/lib/plotly-shared.module.ts","../../../projects/plotly/src/lib/plotly.module.ts","../../../projects/plotly/src/lib/plotly-via-cdn.module.ts","../../../projects/plotly/src/lib/plotly-via-window.module.ts","../../../projects/plotly/src/public-api.ts","../../../projects/plotly/src/erksmaas-angular-plotly.js.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plotly } from './plotly.interface';\r\n\r\ntype PlotlyName = 'Plotly' | 'ViaCDN' | 'ViaWindow';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PlotlyService {\r\n    protected static instances: Plotly.PlotlyHTMLElement[] = [];\r\n    protected static plotly?: any = undefined;\r\n    protected static moduleName?: PlotlyName = undefined;\r\n\r\n    public static setModuleName(moduleName: PlotlyName): void {\r\n        PlotlyService.moduleName = moduleName;\r\n    }\r\n\r\n    public static getModuleName(): PlotlyName {\r\n        return PlotlyService.moduleName;\r\n    }\r\n\r\n    public static setPlotly(plotly: any): void {\r\n        if (typeof plotly === 'object' && typeof plotly.react !== 'function') {\r\n            throw new Error('Invalid plotly.js version. Please, use any version above 1.40.0');\r\n        }\r\n\r\n        PlotlyService.plotly = plotly;\r\n    }\r\n\r\n    public static insert(instance: Plotly.PlotlyHTMLElement): Plotly.PlotlyHTMLElement {\r\n        const index = PlotlyService.instances.indexOf(instance);\r\n        if (index === -1) {\r\n            PlotlyService.instances.push(instance);\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    public static remove(div: Plotly.PlotlyHTMLElement): void {\r\n        const index = PlotlyService.instances.indexOf(div);\r\n        if (index >= 0) {\r\n            PlotlyService.instances.splice(index, 1);\r\n            PlotlyService.plotly.purge(div);\r\n        }\r\n    }\r\n\r\n    public getInstanceByDivId(id: string): Plotly.PlotlyHTMLElement | undefined {\r\n        for (const instance of PlotlyService.instances) {\r\n            if (instance && instance.id === id) {\r\n                return instance;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public async getPlotly(): Promise<any> {\r\n        await this.waitFor(() => this._getPlotly() !== 'waiting');\r\n        return this._getPlotly();\r\n    }\r\n\r\n    protected _getPlotly(): any {\r\n        if (typeof PlotlyService.plotly === 'undefined') {\r\n            const msg = PlotlyService.moduleName === 'ViaCDN'\r\n                ? `Error loading Peer dependency plotly.js from CDN url`\r\n                : `Peer dependency plotly.js isn't installed`;\r\n\r\n            throw new Error(msg);\r\n        }\r\n\r\n        return PlotlyService.plotly;\r\n    }\r\n\r\n    protected waitFor(fn: () => boolean): Promise<void> {\r\n        return new Promise((resolve) => {\r\n            const localFn = () => {\r\n                fn() ? resolve() : setTimeout(localFn, 10);\r\n            };\r\n\r\n            localFn();\r\n        });\r\n    }\r\n\r\n    // tslint:disable max-line-length\r\n    public async newPlot(div: HTMLDivElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any> {\r\n        await this.waitFor(() => this._getPlotly() !== 'waiting');\r\n\r\n        if (frames) {\r\n            const obj = {data, layout, config, frames};\r\n            return this._getPlotly().newPlot(div, obj).then(() => PlotlyService.insert(div as any)) as Promise<any>;\r\n        }\r\n\r\n        return this._getPlotly().newPlot(div, data, layout, config).then(() => PlotlyService.insert(div as any)) as Promise<any>;\r\n    }\r\n\r\n    public plot(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any>  {\r\n        if (frames) {\r\n            const obj = {data, layout, config, frames};\r\n            if (typeof(this._getPlotly().plot) === 'function') {\r\n                return this._getPlotly().plot(div, obj) as Promise<any>;\r\n            } else {\r\n                // Adds support for Plotly 2.0.0 release candidates\r\n                return this._getPlotly().newPlot(div, obj) as Promise<any>;\r\n            }\r\n        }\r\n\r\n        if (typeof(this._getPlotly().plot) === 'function') {\r\n            return this._getPlotly().plot(div, data, layout, config) as Promise<any>;\r\n        } else {\r\n            // Adds support for Plotly 2.0.0 release candidates\r\n            return this._getPlotly().newPlot(div, data, layout, config) as Promise<any>;\r\n        }\r\n    }\r\n\r\n    public update(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any>  {\r\n        if (frames) {\r\n            const obj = {data, layout, config, frames};\r\n            return this._getPlotly().react(div, obj) as Promise<any>;\r\n        }\r\n\r\n        return this._getPlotly().react(div, data, layout, config) as Promise<any>;\r\n    }\r\n    // tslint:enable max-line-length\r\n\r\n    public resize(div: Plotly.PlotlyHTMLElement): void {\r\n        return this._getPlotly().Plots.resize(div);\r\n    }\r\n}\r\n","/* tslint:disable component-selector no-output-native no-conflicting-lifecycle */\r\n\r\nimport {\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    SimpleChange,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    DoCheck,\r\n    IterableDiffer,\r\n    IterableDiffers,\r\n    KeyValueDiffer,\r\n    KeyValueDiffers,\r\n} from '@angular/core';\r\n\r\nimport { PlotlyService } from './plotly.service';\r\nimport { Plotly } from './plotly.interface';\r\n\r\n// @dynamic\r\n@Component({\r\n    selector: 'plotly-plot',\r\n    template: `<div #plot [attr.id]=\"divId\" [ngClass]=\"getClassName()\" [ngStyle]=\"style\">\r\n      <ng-content></ng-content>\r\n    </div>`,\r\n    providers: [PlotlyService],\r\n})\r\nexport class PlotlyComponent implements OnInit, OnChanges, OnDestroy, DoCheck {\r\n    protected defaultClassName = 'js-plotly-plot';\r\n\r\n    public plotlyInstance: Plotly.PlotlyHTMLElement;\r\n    public resizeHandler?: (instance: Plotly.PlotlyHTMLElement) => void;\r\n    public layoutDiffer: KeyValueDiffer<string, any>;\r\n    public dataDiffer: IterableDiffer<Plotly.Data>;\r\n\r\n    @ViewChild('plot', { static: true }) plotEl: ElementRef;\r\n\r\n    @Input() data?: Plotly.Data[];\r\n    @Input() layout?: Partial<Plotly.Layout>;\r\n    @Input() config?: Partial<Plotly.Config>;\r\n    @Input() frames?: Partial<Plotly.Config>[];\r\n    @Input() style?: { [key: string]: string };\r\n\r\n    @Input() divId?: string;\r\n    @Input() revision = 0;\r\n    @Input() className?: string | string[];\r\n    @Input() debug = false;\r\n    @Input() useResizeHandler = false;\r\n\r\n    @Input() updateOnLayoutChange = true;\r\n    @Input() updateOnDataChange = true;\r\n    @Input() updateOnlyWithRevision = false;\r\n\r\n    @Output() initialized = new EventEmitter<Plotly.Figure>();\r\n    @Output() update = new EventEmitter<Plotly.Figure>();\r\n    @Output() purge = new EventEmitter<Plotly.Figure>();\r\n    @Output() error = new EventEmitter<Error>();\r\n\r\n    @Output() afterExport = new EventEmitter();\r\n    @Output() afterPlot = new EventEmitter();\r\n    @Output() animated = new EventEmitter();\r\n    @Output() animatingFrame = new EventEmitter();\r\n    @Output() animationInterrupted = new EventEmitter();\r\n    @Output() autoSize = new EventEmitter();\r\n    @Output() beforeExport = new EventEmitter();\r\n    @Output() buttonClicked = new EventEmitter();\r\n    @Output() click = new EventEmitter();\r\n    @Output() plotlyClick = new EventEmitter();\r\n    @Output() clickAnnotation = new EventEmitter();\r\n    @Output() deselect = new EventEmitter();\r\n    @Output() doubleClick = new EventEmitter();\r\n    @Output() framework = new EventEmitter();\r\n    @Output() hover = new EventEmitter();\r\n    @Output() legendClick = new EventEmitter();\r\n    @Output() legendDoubleClick = new EventEmitter();\r\n    @Output() react = new EventEmitter();\r\n    @Output() relayout = new EventEmitter();\r\n    @Output() restyle = new EventEmitter();\r\n    @Output() redraw = new EventEmitter();\r\n    @Output() selected = new EventEmitter();\r\n    @Output() selecting = new EventEmitter();\r\n    @Output() sliderChange = new EventEmitter();\r\n    @Output() sliderEnd = new EventEmitter();\r\n    @Output() sliderStart = new EventEmitter();\r\n    @Output() transitioning = new EventEmitter();\r\n    @Output() transitionInterrupted = new EventEmitter();\r\n    @Output() unhover = new EventEmitter();\r\n    @Output() relayouting = new EventEmitter();\r\n    @Output() treemapclick = new EventEmitter();\r\n    @Output() sunburstclick = new EventEmitter();\r\n\r\n    public eventNames = ['afterExport', 'afterPlot', 'animated', 'animatingFrame', 'animationInterrupted', 'autoSize',\r\n        'beforeExport', 'buttonClicked', 'clickAnnotation', 'deselect', 'doubleClick', 'framework', 'hover',\r\n        'legendClick', 'legendDoubleClick', 'react', 'relayout', 'restyle', 'redraw', 'selected', 'selecting', 'sliderChange',\r\n        'sliderEnd', 'sliderStart', 'transitioning', 'transitionInterrupted', 'unhover', 'relayouting', 'treemapclick',\r\n        'sunburstclick'];\r\n\r\n    constructor(\r\n        public plotly: PlotlyService,\r\n        public iterableDiffers: IterableDiffers,\r\n        public keyValueDiffers: KeyValueDiffers,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.createPlot().then(() => {\r\n            const figure = this.createFigure();\r\n            this.initialized.emit(figure);\r\n        });\r\n\r\n        if (this.click.observers.length > 0) {\r\n            const msg = 'DEPRECATED: Reconsider using `(plotlyClick)` instead of `(click)` to avoid event conflict. '\r\n                + 'Please check https://github.com/plotly/angular-plotly.js#FAQ';\r\n            console.error(msg);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (typeof this.resizeHandler === 'function') {\r\n            this.getWindow().removeEventListener('resize', this.resizeHandler as any);\r\n            this.resizeHandler = undefined;\r\n        }\r\n\r\n        if (this.plotlyInstance) {\r\n            const figure = this.createFigure();\r\n            this.purge.emit(figure);\r\n            PlotlyService.remove(this.plotlyInstance);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        let shouldUpdate = false;\r\n\r\n        const revision: SimpleChange = changes.revision;\r\n        if (revision && !revision.isFirstChange()) {\r\n            shouldUpdate = true;\r\n        }\r\n\r\n        const debug: SimpleChange = changes.debug;\r\n        if (debug && !debug.isFirstChange()) {\r\n            shouldUpdate = true;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            this.updatePlot();\r\n        }\r\n\r\n        this.updateWindowResizeHandler();\r\n    }\r\n\r\n    ngDoCheck(): boolean | void {\r\n        if (this.updateOnlyWithRevision) {\r\n            return false;\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n\r\n        if (this.updateOnLayoutChange) {\r\n            if (this.layoutDiffer) {\r\n                const layoutHasDiff = this.layoutDiffer.diff(this.layout);\r\n                if (layoutHasDiff) {\r\n                    shouldUpdate = true;\r\n                }\r\n            } else if (this.layout) {\r\n                this.layoutDiffer = this.keyValueDiffers.find(this.layout).create();\r\n            } else {\r\n                this.layoutDiffer = undefined;\r\n            }\r\n        }\r\n\r\n        if (this.updateOnDataChange) {\r\n            if (this.dataDiffer) {\r\n                const dataHasDiff = this.dataDiffer.diff(this.data);\r\n                if (dataHasDiff) {\r\n                    shouldUpdate = true;\r\n                }\r\n            } else if (Array.isArray(this.data)) {\r\n                this.dataDiffer = this.iterableDiffers.find(this.data).create(this.dataDifferTrackBy);\r\n            } else {\r\n                this.dataDiffer = undefined;\r\n            }\r\n        }\r\n\r\n        if (shouldUpdate && this.plotlyInstance) {\r\n            this.updatePlot();\r\n        }\r\n    }\r\n\r\n    getWindow(): any {\r\n        return window;\r\n    }\r\n\r\n    getClassName(): string {\r\n        let classes = [this.defaultClassName];\r\n\r\n        if (Array.isArray(this.className)) {\r\n            classes = classes.concat(this.className);\r\n        } else if (this.className) {\r\n            classes.push(this.className);\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n\r\n    createPlot(): Promise<void> {\r\n        return this.plotly.newPlot(this.plotEl.nativeElement, this.data, this.layout, this.config, this.frames).then(plotlyInstance => {\r\n            this.plotlyInstance = plotlyInstance;\r\n            this.getWindow().gd = this.debug ? plotlyInstance : undefined;\r\n\r\n            this.eventNames.forEach(name => {\r\n                const eventName = `plotly_${name.toLowerCase()}`;\r\n                plotlyInstance.on(eventName, (data: any) => (this[name] as EventEmitter<void>).emit(data));\r\n            });\r\n\r\n            plotlyInstance.on('plotly_click', (data: any) => {\r\n                this.click.emit(data);\r\n                this.plotlyClick.emit(data);\r\n            });\r\n\r\n            this.updateWindowResizeHandler();\r\n        }, err => {\r\n            console.error('Error while plotting:', err);\r\n            this.error.emit(err);\r\n        });\r\n    }\r\n\r\n    createFigure(): Plotly.Figure {\r\n        const p: any = this.plotlyInstance;\r\n        const figure: Plotly.Figure = {\r\n            data: p.data,\r\n            layout: p.layout,\r\n            frames: p._transitionData ? p._transitionData._frames : null\r\n        };\r\n\r\n        return figure;\r\n    }\r\n\r\n    updatePlot(): Promise<any> {\r\n        if (!this.plotlyInstance) {\r\n            const error = new Error(`Plotly component wasn't initialized`);\r\n            this.error.emit(error);\r\n            throw error;\r\n        }\r\n\r\n        const layout = { ...this.layout };\r\n\r\n        return this.plotly.update(this.plotlyInstance, this.data, layout, this.config, this.frames).then(() => {\r\n            const figure = this.createFigure();\r\n            this.update.emit(figure);\r\n        }, err => {\r\n            console.error('Error while updating plot:', err);\r\n            this.error.emit(err);\r\n        });\r\n    }\r\n\r\n    updateWindowResizeHandler(): void {\r\n        if (this.useResizeHandler) {\r\n            if (this.resizeHandler === undefined) {\r\n                this.resizeHandler = () => this.plotly.resize(this.plotlyInstance);\r\n                this.getWindow().addEventListener('resize', this.resizeHandler as any);\r\n            }\r\n        } else {\r\n            if (typeof this.resizeHandler === 'function') {\r\n                this.getWindow().removeEventListener('resize', this.resizeHandler as any);\r\n                this.resizeHandler = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    dataDifferTrackBy(_: number, item: any): unknown {\r\n        const obj = Object.assign({}, item, { uid: '' });\r\n        return JSON.stringify(obj);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PlotlyService } from './plotly.service';\r\nimport { PlotlyComponent } from './plotly.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [PlotlyComponent],\r\n    imports: [CommonModule],\r\n    providers: [PlotlyService],\r\n    exports: [PlotlyComponent],\r\n})\r\nexport class PlotlySharedModule {\r\n    constructor() { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PlotlyService } from './plotly.service';\r\nimport { PlotlySharedModule } from './plotly-shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [CommonModule, PlotlySharedModule],\r\n    providers: [PlotlyService],\r\n    exports: [PlotlySharedModule],\r\n})\r\nexport class PlotlyModule {\r\n    public static plotlyjs: any = {};\r\n\r\n    constructor() {\r\n        if (!this.isValid()) {\r\n            const msg = 'Invalid PlotlyJS object. Please check https://github.com/plotly/angular-plotly.js#quick-start'\r\n                + ' to see how to add PlotlyJS to your project.';\r\n            throw new Error(msg);\r\n        }\r\n\r\n        PlotlyService.setPlotly(PlotlyModule.plotlyjs);\r\n    }\r\n\r\n    private isValid(): boolean {\r\n        return PlotlyModule.plotlyjs !== undefined\r\n            && (typeof PlotlyModule.plotlyjs.plot === 'function'\r\n                || typeof PlotlyModule.plotlyjs.newPlot === 'function');\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PlotlyService } from './plotly.service';\r\nimport { PlotlySharedModule } from './plotly-shared.module';\r\n\r\n\r\nexport type PlotlyBundleName = 'basic' | 'cartesian' | 'geo' | 'gl3d' | 'gl2d' | 'mapbox' | 'finance';\r\n\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [CommonModule, PlotlySharedModule],\r\n    providers: [PlotlyService],\r\n    exports: [PlotlySharedModule],\r\n})\r\nexport class PlotlyViaCDNModule {\r\n    private static plotlyBundle?: string = null;\r\n    private static plotlyVersion = 'latest';\r\n    public static plotlyBundleNames: PlotlyBundleName[] = ['basic', 'cartesian', 'geo', 'gl3d', 'gl2d', 'mapbox', 'finance'];\r\n\r\n    constructor(public plotlyService: PlotlyService) {\r\n        PlotlyService.setModuleName('ViaCDN');\r\n    }\r\n\r\n    public static setPlotlyVersion(version: string): void {\r\n        const isOk = version === 'latest' || /^\\d\\.\\d{1,2}\\.\\d{1,2}$/.test(version);\r\n        if (!isOk) {\r\n            throw new Error(`Invalid plotly version. Please set 'latest' or version number (i.e.: 1.4.3)`);\r\n        }\r\n\r\n        PlotlyViaCDNModule.loadViaCDN();\r\n        PlotlyViaCDNModule.plotlyVersion = version;\r\n    }\r\n\r\n    public static setPlotlyBundle(bundle: PlotlyBundleName | null): void {\r\n        const isOk = bundle === null || PlotlyViaCDNModule.plotlyBundleNames.indexOf(bundle) >= 0;\r\n        if (!isOk) {\r\n            const names = PlotlyViaCDNModule.plotlyBundleNames.map(n => `\"${n}\"`).join(', ');\r\n            throw new Error(`Invalid plotly bundle. Please set to null for full or ${names} for a partial bundle.`);\r\n        }\r\n\r\n        PlotlyViaCDNModule.plotlyBundle = bundle;\r\n    }\r\n\r\n    public static loadViaCDN(): void {\r\n        PlotlyService.setPlotly('waiting');\r\n\r\n        const init = () => {\r\n            const src = PlotlyViaCDNModule.plotlyBundle == null\r\n                ? `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyVersion}.min.js`\r\n                : `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyBundle}-${PlotlyViaCDNModule.plotlyVersion}.min.js`;\r\n\r\n            const script: HTMLScriptElement = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.src = src;\r\n            script.onerror = () => console.error(`Error loading plotly.js library from ${src}`);\r\n\r\n            const head: HTMLHeadElement = document.getElementsByTagName('head')[0];\r\n            head.appendChild(script);\r\n\r\n            let counter = 200; // equivalent of 10 seconds...\r\n\r\n            const fn = () => {\r\n                const plotly = (window as any).Plotly;\r\n                if (plotly) {\r\n                    PlotlyService.setPlotly(plotly);\r\n                } else if (counter > 0) {\r\n                    counter --;\r\n                    setTimeout(fn, 50);\r\n                } else {\r\n                    throw new Error(`Error loading plotly.js library from ${src}. Timeout.`);\r\n                }\r\n            };\r\n\r\n            fn();\r\n        };\r\n\r\n        setTimeout(init);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PlotlyService } from './plotly.service';\r\nimport { PlotlySharedModule } from './plotly-shared.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [CommonModule, PlotlySharedModule],\r\n    providers: [PlotlyService],\r\n    exports: [PlotlySharedModule],\r\n})\r\nexport class PlotlyViaWindowModule {\r\n    constructor() {\r\n        const plotly = (window as any).Plotly;\r\n\r\n        if (typeof plotly === 'undefined') {\r\n            throw new Error(`Plotly object not found on window.`);\r\n        }\r\n\r\n        PlotlyService.setPlotly(plotly);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of plotly\r\n */\r\n\r\nexport * from './lib/plotly.module';\r\nexport * from './lib/plotly-via-cdn.module';\r\nexport * from './lib/plotly-via-window.module';\r\nexport * from './lib/plotly-shared.module';\r\n\r\nexport * from './lib/plotly.service';\r\nexport * from './lib/plotly.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}